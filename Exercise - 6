package banking;
interface Bank {
 void deposit(double amount);
 void withdraw(double amount);
 double getBalance();
}
abstract class Account implements Bank {
 protected String accountNumber;
 protected String accountHolder;
 protected double balance;

 public Account(String accountNumber, String accountHolder, double balance) {
     this.accountNumber = accountNumber;
     this.accountHolder = accountHolder;
     this.balance = balance;
 }
 public void deposit(double amount) {
     balance += amount;
     System.out.println("Deposited: " + amount + " | New Balance: " + balance);
 }
 public double getBalance() {
     return balance;
 }
 public abstract void withdraw(double amount);
}
class SavingsAccount extends Account {
 private double withdrawalLimit;

 public SavingsAccount(String accountNumber, String accountHolder, double balance, double withdrawalLimit) {
     super(accountNumber, accountHolder, balance);
     this.withdrawalLimit = withdrawalLimit;
 }
 public void withdraw(double amount) {
     if (amount <= balance && amount <= withdrawalLimit) {
         balance -= amount;
         System.out.println("Withdrawn: " + amount + " | New Balance: " + balance);
     } else {
         System.out.println("Withdrawal failed! Either limit exceeded or insufficient balance.");
     }
 }
}
class Transaction {
 private String transactionType;
 private double amount;

 public Transaction(String transactionType, double amount) {
     this.transactionType = transactionType;
     this.amount = amount;
 }

 public void showTransaction() {
     System.out.println("Transaction: " + transactionType + " | Amount: " + amount);
 }
}
public class BankingSystem {
 public static void main(String[] args) {
     SavingsAccount acc1 = new SavingsAccount("A101", "John Doe", 5000.0, 2000.0);

     System.out.println("Account Holder: " + acc1.accountHolder);
     System.out.println("Account Number: " + acc1.accountNumber);
     System.out.println("Initial Balance: " + acc1.getBalance());
     System.out.println();
     acc1.deposit(1500);
     Transaction t1 = new Transaction("Deposit", 1500);
     t1.showTransaction();

     acc1.withdraw(1800);
     Transaction t2 = new Transaction("Withdraw", 1800);
     t2.showTransaction();

     acc1.withdraw(2500); 
 }
 }
